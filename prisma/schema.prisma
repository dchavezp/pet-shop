// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String  @id @default(cuid())
  userId        String  @unique
  refresh_token String? @db.Text
  access_token  String? @db.Text
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id      String   @id @default(cuid())
  name    String
  email   String   @unique
  role    Role     @default(CLIENT)
  Order   Order[]
  Session Session?
}

model PetProductImage {
  id        String     @id @default(cuid())
  pathImage String
  productId String
  product   PetProduct @relation(fields: [productId], references: [id])
}

model PetProduct {
  id           String            @id @default(cuid())
  title        String
  description  String
  stock        Int
  price        Decimal           @db.Decimal(10, 2)
  categoryId   String
  isActive     Boolean           @default(true)
  category     Category          @relation(fields: [categoryId], references: [id])
  ProductImage PetProductImage[]
  ProductOrder PetProductOrder[]
}

model PetProductOrder {
  id            String     @id @default(cuid())
  productId     String
  orderId       String
  quantity      Int
  customPetName String?
  product       PetProduct @relation(fields: [productId], references: [id])
  order         Order      @relation(fields: [orderId], references: [id])
}

model Order {
  id              String            @id @default(cuid())
  customerId      String
  customer        User              @relation(fields: [customerId], references: [id])
  createAt        DateTime?         @default(now())
  updatedAt       DateTime?         @updatedAt
  amount          Decimal           @db.Decimal(10, 2)
  status          Status            @default(PENDING)
  PetProductOrder PetProductOrder[]
}

model Category {
  id      String       @id @default(cuid())
  name    String
  Product PetProduct[]
}

enum Role {
  MANAGER
  CLIENT
}

enum Status {
  PENDING
  ACCEPTED
  SENDING
  DELIVERED
  CANCELLED
}
